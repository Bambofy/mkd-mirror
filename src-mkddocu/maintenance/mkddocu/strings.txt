

  142 if test -x /usr/bin/mkd; then echo "";
  144    if test -x ./mkd ; then echo "";
  146       echo "$(gettext ' Please install mkd software ')" 
  157       echo "$(gettext ' Syntax : ')"
  158       echo "$(gettext ' mkddocu <target_dir> ')"
  159       echo "$(gettext '    -> example of series with date : mkddocu 2014-02-22 ')"
  160       echo "$(gettext '    The target directory is also writen in maintenance directory : ')"
  161       echo "$(gettext '    -> maintenance/2014-02-22/ ')"
  162       echo "$(gettext ' mkddocu ? for this help ')"
  163       echo ""
  168    if [ $1 = "?" ]
  179 str="false"       #P false ou true
  180 project="project" #P nom du fichier de projet .prj
  187       echo ""
  188 #      echo " Deux paramètres à la ligne de commande "
  189 #      echo " Paramètres : 1=$1, 2=$2 "
  190       if test $1 && [ $1 != "-s" ] ; 
  193          if [ $2 = "-s" ]; then str="true"; fi #P Vérif que c'est bien -s
  195          if [ $1 = "-s" ]; then str="true"; project=$2; fi
  198       echo ""
  199 #      echo " Un seul paramètre à la ligne de commande : $1 "
  200       if test $1 && [ $1 != "-s" ] ; then project=$1; fi
  201       if [ $1 = "-s" ]; then str="true"; fi
  203 else echo "" # " Pas de paramètre "
  205 #P force str="true" without option -s 22/03/2014
  206 str="true" #P
  207 # echo " Projet : $project "
  208 # echo " Strings ? : $str "
  232             echo -n " (mkddocu) "
  233             echo "$(gettext ' Last backup before maintenance : ')"
  234             echo -n " (mkddocu) "
  235             echo -n "$(gettext ' (mkddocu) Make backup in Backups dir, yes ? Your choice : y ? ')"
  238             if test $char &&  [ $char = "y" ]
  242                echo -n " (mkddocu) "
  243                echo -n "$(gettext ' If the directory '"
  244                echo -n "'Backups'"
  245                echo "$(gettext ' does not exist, create it ')"
  252                echo -n " (mkddocu) "
  253                echo -n "$(gettext ' Files in directory ')"
  254                echo "Backups "
  257                echo -n " (mkddocu) "
  258                echo "$(gettext ' return -2 ')"
  289 if test -s cfiles.txt ; then cfiles="true"; fi
  292    echo -n " (mkddocu) "
  293    echo -n "$(gettext ' -> Create header file in ')"
  294    echo -n "maintenance/$project/$project.h"
  295    echo "$(gettext ' (benchmark H) ')"
  298    echo -n " (mkddocu) "
  299    echo "$(gettext ' -> Warning : Copy manually the header file in current source directory ')"
  302    echo -n " (mkddocu) "
  303    echo "$(gettext ' C files not found ')"
  309 echo -n " (mkddocu) "
  310 echo "$(gettext ' Creating documentation, find the programming style, with the benchmark D ')"
  311 echo " -> ./maintenance/$project/$project-documentation.txt "
  317 echo -n " (mkddocu) "
  318 echo "$(gettext ' Creates the tests document and the directives of tests, with the benchmark T ')"
  319 echo " -> ./maintenance/$project/$project-tests-directives.txt "
  325 echo -n " (mkddocu) "
  326 echo "$(gettext ' Creates the document for the maintainers, with the benchmark P ')"
  327 echo " -> /maintenance/$project-maintainers-doc.txt "
  332 #en If second parametre is "-s" then
  335 if [ $str = "true" ]; then
  336    echo -n " (mkddocu) "
  337    echo "$(gettext ' Creates a file with strings, and a file with strings for tranlations, with benchmark ** ')"
  345 echo -n " (mkddocu) "
  346 echo -n "$(gettext '  See in working directory: ')"
  347 echo "./maintenance/$project/$project/* "
  350 echo -n " (mkddocu) "
  351 echo "$(gettext '  end normal, return 0 ')"

    2 echo "File UNINSTALL.sh in src-mkddocu directory."
    3 echo "rm /usr/bin/mkddocu"
    5 echo "/usr/share/doc/mkd"
   10 echo "rm sofware messages"
   12 echo "rm manuals"
   15 rm "erase mkddocu informations from the mime-database"
   18 echo "UNINSTALL mkddocu End"
